rning easier for your network, your data should havethe following characteristics:Take small values—Typically, most values should be in the 0–1 range.Be homogenous—All features should take values in roughly the same range.Additionally, the following stricter normalization practice is common and can help,although it isn’t always necessary (for example, we didn’t do this in the digit-classifica-tion example):Normalize each feature independently to have a mean of 0.Normalize each feature independently to have a standard deviation of 1.This is easy to do with NumPy arrays:x- =x . m e a n ( a x i s =0)  x/ =x . s t d ( a x i s =0)HANDLING MISSING VALUESYou may sometimes have missing values in your data. For instance, in the house-priceexample, the first feature (the column of index 0 in the data) was the per capita crimerate. What if this feature wasn’t available for all samples? You’d then have missing val-ues in the training or test data. You could just discard the feature entirely, but you don’t necessarily have to.If the feature is categorical, it’s safe to create a new category that means “thevalue is missing.” The model will automatically learn what this implies withrespect to the targets.If the feature is numerical, avoid inputting an arbitrary value like "0", becauseit may create a discontinuity in the latent space formed by your features, mak-ing it harder for a model trained on it to generalize